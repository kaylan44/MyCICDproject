pipeline {
    
    agent any
    
	environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhub-kaylan44')
		NEXUS_CREDENTIALS=credentials('nexus-repo-cred')
		NEXUS_SERVERIP_PORT='10.132.0.43:8082'
		PROJECT_ID = 'ilkilab08'
		CLUSTER_NAME = 'cluster-ci-cd-m2i-project'
		LOCATION= 'europe-west1-b'
		CREDENTIALS_ID = 'kubernetes'
	}
	
    stages {
        stage('Git clone project') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/kaylan44/MyCICDproject'
            }
        }

        stage('Maven test') {
            steps {
                sh 'echo $PWD'
                sh 'mvn test'
            }
        }
        stage('Maven install') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Docker image build') {
            steps {
                sh 'cp ./target/hello.war ./Docker/hello.war'
                dir("Docker") {
                    sh "pwd"
                    //sh 'docker build -t kaylan44/hello-webapp .'
		    sh 'docker build -t ${NEXUS_SERVERIP_PORT}/hello-webapp .'
                }   
            }
        }
    	/*
	stage('Login DockerHub') {
		steps {
			sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
		}
	}
	stage('Docker push to DockerHUBregistry') {
            steps {
	    	//sh 'docker push kaylan44/hello-webapp:latest'
            }
        }
	*/
	    
	stage('Login Nexus Repo') {
		steps {
			sh 'echo $NEXUS_CREDENTIALS_PSW | docker login ${NEXUS_SERVERIP_PORT} -u $NEXUS_CREDENTIALS_USR --password-stdin '
		}
	}
	
        stage('Docker push to NEXUS registry') {
            steps {
	    	//sh 'docker push kaylan44/hello-webapp:latest'
		    sh 'docker push ${NEXUS_SERVERIP_PORT}/hello-webapp:latest'
            }
        }
        stage('Deploy to GCP K8S') {
            steps {

                dir("Kubernetes") {

                    echo "Deployment of Kubernetes cluster deployment:"
                    step([
                        $class:'KubernetesEngineBuilder',
                        projectId: env.PROJECT_ID,
                        clusterName: env.CLUSTER_NAME,
                        location: env.LOCATION,
                        manifestPattern: 'deployment.yml',
                        credentialsId: env.CREDENTIALS_ID,
                        verifyDeployments: true
                    ])

                    echo "Deployment of Kubernetes cluster nodeport service:"
                    step([
                        $class:'KubernetesEngineBuilder',
                        projectId: env.PROJECT_ID,
                        clusterName: env.CLUSTER_NAME,
                        location: env.LOCATION,
                        manifestPattern: 'webnodeport.yml',
                        credentialsId: env.CREDENTIALS_ID,
                        verifyDeployments: true])
                        
                    echo "Deployment of Kubernetes cluster Ingress service:"
                    step([
                        $class:'KubernetesEngineBuilder',
                        projectId: env.PROJECT_ID,
                        clusterName: env.CLUSTER_NAME,
                        location: env.LOCATION,
                        manifestPattern: 'ingress.yml',
                        credentialsId: env.CREDENTIALS_ID,
                        verifyDeployments: true])
                }
            }
        }
    }
}
